<?xml version="1.0" encoding="UTF-8" ?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
         
    <simple-method method-name="updateCustomerPersonalInfo" short-description="Update Customer Personal Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        <!-- Create person map -->
        <call-map-processor in-map-name="parameters" out-map-name="personMap">
            <simple-map-processor name="newPerson">
                <process field="personalTitle"><copy/></process>
                <process field="USER_FIRST_NAME">
                    <copy to-field="firstName"/>
                </process>
                <process field="USER_MIDDLE_NAME"><copy to-field="middleName"/></process>
                <process field="USER_LAST_NAME">
                    <copy to-field="lastName"/>
                </process>
                <process field="USER_GENDER"><copy to-field="gender"/></process>
            </simple-map-processor>
        </call-map-processor>
        <!-- update person service -->
        <set from-field="parameters.partyId" field="personMap.partyId"/>
        <call-service service-name="updatePerson" in-map-name="personMap"></call-service>
        <!-- send email -->
        <set-service-fields service-name="sendUpdatePersonalInfoEmailNotification" map="parameters" to-map="sendUpdatePersonalInfoEmailNotificationCtx"/>
        <call-service service-name="sendUpdatePersonalInfoEmailNotification" in-map-name="sendUpdatePersonalInfoEmailNotificationCtx"/>
        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserProfileUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
    
    <simple-method method-name="updateCustomerLogin" short-description="Update Customer Login Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        <!-- Update user's email address -->
        <if-not-empty field="parameters.emailAddressContactMechId">
            <set field="emailAddressContext.partyId" from-field="parameters.partyId"/>
            <set field="emailAddressContext.contactMechId" from-field="parameters.emailAddressContactMechId"/>
            <set field="emailAddressContext.emailAddress" from-field="parameters.CUSTOMER_EMAIL"/>
            <if-not-empty field="parameters.CUSTOMER_EMAIL_ALLOW_SOL">
               <set field="emailAddressContext.allowSolicitation" from-field="parameters.CUSTOMER_EMAIL_ALLOW_SOL"/>
            <else>
               <set field="emailAddressContext.allowSolicitation" value="N"/>
            </else>
            </if-not-empty>
            <call-service service-name="updatePartyEmailAddress" in-map-name="emailAddressContext"></call-service>
        </if-not-empty>
        <!-- Update user's passord  -->
        <property-to-field resource="security" property="username.lowercase" default="false" field="username_lowercase"/>
        <property-to-field resource="security" property="password.lowercase" default="false" field="password_lowercase"/>
        <!-- if username and/or password should be lowercased, do that now -->
        <if-compare field="username_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.USERNAME" method-name="toLowerCase" ret-field="parameters.USERNAME"/>
        </if-compare>
        <if-compare field="password_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.PASSWORD" method-name="toLowerCase" ret-field="parameters.PASSWORD"/>
            <call-object-method obj-field="parameters.CONFIRM_PASSWORD" method-name="toLowerCase" ret-field="parameters.CONFIRM_PASSWORD"/>
            <call-object-method obj-field="parameters.OLD_PASSWORD" method-name="toLowerCase" ret-field="parameters.OLD_PASSWORD"/>
        </if-compare>
        <if-not-empty field="parameters.PASSWORD">
            <call-map-processor in-map-name="parameters" out-map-name="passwordContext">
                <simple-map-processor name="newPassword">
                    <process field="USERNAME"><copy to-field="userLoginId"/></process>
                    <process field="PASSWORD"><copy to-field="newPassword"/></process>
                    <process field="OLD_PASSWORD">
                        <copy to-field="currentPassword"/>
                    </process>
                    <process field="CONFIRM_PASSWORD">
                        <compare-field operator="equals" field="PASSWORD"><fail-property resource="OSafeUiLabels" property="PasswordMatchError"/></compare-field>
                        <!-- This is checked below in the checkNewPassword method in the bsh block: <not-empty><fail-message message="You must enter your password twice"/></not-empty> -->
                        <copy to-field="newPasswordVerify"/>
                    </process>
                </simple-map-processor>
            </call-map-processor>
           <call-service service-name="updatePassword" in-map-name="passwordContext"></call-service>
        </if-not-empty>
        <if-not-empty field="parameters.PARTY_EMAIL_PREFERENCE">
            <entity-one value-field="partyAttributeExists" entity-name="PartyAttribute">
                <field-map field-name="attrName" value="PARTY_EMAIL_PREFERENCE"/>
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-one>
            
            <make-value entity-name="PartyAttribute" value-field="partyAttribute"/>
            <set from-field="parameters.partyId" field="partyAttribute.partyId"/>
            <set value="PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrName"/>
            <set from-field="parameters.PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrValue"/>
            <if-not-empty field="partyAttributeExists">
                <store-value value-field="partyAttribute"/>
            <else>
                <create-value value-field="partyAttribute"/>
            </else>
            </if-not-empty>
        </if-not-empty>
        

        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserLoginUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
</simple-methods>
