<?xml version="1.0" encoding="UTF-8" ?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
         
    <simple-method method-name="updateCustomerPersonalInfo" short-description="Update Customer Personal Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        <call-simple-method method-name="PersonalInfoValidation" xml-resource="component://osafe/script/Validation/ValidationEvents.xml"/>
         <check-errors/>
         <call-simple-method method-name="createUpdatePartyAttributes"/>
        <!-- Create person map -->
        <call-map-processor in-map-name="parameters" out-map-name="personMap">
            <simple-map-processor name="newPerson">
                <process field="personalTitle"><copy/></process>
                <process field="USER_FIRST_NAME">
                    <copy to-field="firstName"/>
                </process>
                <process field="USER_MIDDLE_NAME"><copy to-field="middleName"/></process>
                <process field="USER_LAST_NAME">
                    <copy to-field="lastName"/>
                </process>
                <!--  process field="USER_GENDER"><copy to-field="gender"/></process>-->
            </simple-map-processor>
        </call-map-processor>
        <!-- update person service -->
        <set from-field="parameters.partyId" field="personMap.partyId"/>
        <call-service service-name="updatePerson" in-map-name="personMap"></call-service>

        <!-- update phone contact -->
        <!-- home phone -->
        <if>
           <condition>
              <or>
                <not><if-empty field="contactHomePhoneMap.contactHomePhoneContact"></if-empty></not>
                <not><if-empty field="contactHomeOtherPhoneMap.contactHomeOtherPhoneContact"></if-empty></not>
              </or>
           </condition>
                <then>
                    <if-not-empty field="parameters.homePhoneContactMechId">
                        <set field="homePhoneContext.contactMechId" from-field="parameters.homePhoneContactMechId"/>
                        <call-service service-name="updatePartyTelecomNumber" in-map-name="homePhoneContext">
                            <result-to-field result-name="contactMechId" field="homePhoneContext.contactMechId"/>
                        </call-service>
                        <else>
                            <call-service service-name="createPartyTelecomNumber" in-map-name="homePhoneContext">
                                <result-to-field result-name="contactMechId" field="homePhoneContext.contactMechId"/>
                            </call-service>
                            <set from-field="userLogin.partyId" field="homePhonePurposeContext.partyId"/>
                            <set from-field="homePhoneContext.contactMechId" field="homePhonePurposeContext.contactMechId"/>
            
                            <set value="PHONE_HOME" field="homePhonePurposeContext.contactMechPurposeTypeId"/>
                            <call-service service-name="createPartyContactMechPurpose" in-map-name="homePhonePurposeContext"/>
                            <set value="PRIMARY_PHONE" field="homePhonePurposeContext.contactMechPurposeTypeId"/>
                            <call-service service-name="createPartyContactMechPurpose" in-map-name="homePhonePurposeContext"/>
                        </else>
                    </if-not-empty>
               </then>
            </if>  
            
        <!-- work phone -->
        <if-not-empty field="parameters.workPhoneContactMechId">
            <set field="workPhoneContext.contactMechId" from-field="parameters.workPhoneContactMechId"/>
            <if-not-empty field="workPhoneContext.contactNumber">
                <call-service service-name="updatePartyTelecomNumber" in-map-name="workPhoneContext">
                    <result-to-field result-name="contactMechId" field="workPhoneContext.contactMechId"/>
                </call-service>
            <else>
                <call-service service-name="deletePartyContactMech" in-map-name="workPhoneContext"/>
            </else>
            </if-not-empty>
            <else>
                <if-not-empty field="workPhoneContext.contactNumber">
                    <call-service service-name="createPartyTelecomNumber" in-map-name="workPhoneContext">
                        <result-to-field result-name="contactMechId" field="workPhoneContext.contactMechId"/>
                    </call-service>
                    <set from-field="userLogin.partyId" field="homePhonePurposeContext.partyId"/>
                    <set from-field="workPhoneContext.contactMechId" field="workPhonePurposeContext.contactMechId"/>

                    <set value="PHONE_WORK" field="workPhonePurposeContext.contactMechPurposeTypeId"/>
                    <call-service service-name="createPartyContactMechPurpose" in-map-name="workPhonePurposeContext"/>
                </if-not-empty>
            </else>
        </if-not-empty>

        <!-- mobile phone -->
        <if-not-empty field="parameters.mobilePhoneContactMechId">
            <set field="mobilePhoneContext.contactMechId" from-field="parameters.mobilePhoneContactMechId"/>
            <if-not-empty field="mobilePhoneContext.contactNumber">
                <call-service service-name="updatePartyTelecomNumber" in-map-name="mobilePhoneContext">
                    <result-to-field result-name="contactMechId" field="mobilePhoneContext.contactMechId"/>
                </call-service>
            <else>
                <call-service service-name="deletePartyContactMech" in-map-name="mobilePhoneContext"/>
            </else>
            </if-not-empty>
        <else>
            <if-not-empty field="mobilePhoneContext.contactNumber">
                <call-service service-name="createPartyTelecomNumber" in-map-name="mobilePhoneContext">
                    <result-to-field result-name="contactMechId" field="mobilePhoneContext.contactMechId"/>
                </call-service>
                <set from-field="userLogin.partyId" field="mobilePhonePurposeContext.partyId"/>
                <set from-field="mobilePhoneContext.contactMechId" field="mobilePhonePurposeContext.contactMechId"/>
                <set value="PHONE_MOBILE" field="mobilePhonePurposeContext.contactMechPurposeTypeId"/>
                <call-service service-name="createPartyContactMechPurpose" in-map-name="mobilePhonePurposeContext"/>
            </if-not-empty>
        </else>
        </if-not-empty>

        <!-- send email -->
        <set-service-fields service-name="sendUpdatePersonalInfoEmailNotification" map="parameters" to-map="sendUpdatePersonalInfoEmailNotificationCtx"/>
        <call-service service-name="sendUpdatePersonalInfoEmailNotification" in-map-name="sendUpdatePersonalInfoEmailNotificationCtx"/>
        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserProfileUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
    
    <simple-method method-name="updateCustomerLogin" short-description="Update Customer Login Information" login-required="true">
        <if-empty field="parameters.partyId"><add-error><fail-message message="No partyId passed, cannot Update Customer"/></add-error></if-empty>
        <!-- Update user's email address -->
        <if-not-empty field="parameters.emailAddressContactMechId">
            <set field="emailAddressContext.partyId" from-field="parameters.partyId"/>
            <set field="emailAddressContext.contactMechId" from-field="parameters.emailAddressContactMechId"/>
            <set field="emailAddressContext.emailAddress" from-field="parameters.CUSTOMER_EMAIL"/>
            <if-not-empty field="parameters.CUSTOMER_EMAIL_ALLOW_SOL">
               <set field="emailAddressContext.allowSolicitation" from-field="parameters.CUSTOMER_EMAIL_ALLOW_SOL"/>
            <else>
               <set field="emailAddressContext.allowSolicitation" value="N"/>
            </else>
            </if-not-empty>
            <call-service service-name="updatePartyEmailAddress" in-map-name="emailAddressContext"></call-service>
        </if-not-empty>
        <!-- Update user's passord  -->
        <property-to-field resource="security" property="username.lowercase" default="false" field="username_lowercase"/>
        <property-to-field resource="security" property="password.lowercase" default="false" field="password_lowercase"/>
        <!-- if username and/or password should be lowercased, do that now -->
        <if-compare field="username_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.USERNAME" method-name="toLowerCase" ret-field="parameters.USERNAME"/>
        </if-compare>
        <if-compare field="password_lowercase" operator="equals" value="true">
            <call-object-method obj-field="parameters.PASSWORD" method-name="toLowerCase" ret-field="parameters.PASSWORD"/>
            <call-object-method obj-field="parameters.CONFIRM_PASSWORD" method-name="toLowerCase" ret-field="parameters.CONFIRM_PASSWORD"/>
            <call-object-method obj-field="parameters.OLD_PASSWORD" method-name="toLowerCase" ret-field="parameters.OLD_PASSWORD"/>
        </if-compare>
        <if-not-empty field="parameters.PASSWORD">
            <call-map-processor in-map-name="parameters" out-map-name="passwordContext">
                <simple-map-processor name="newPassword">
                    <process field="USERNAME"><copy to-field="userLoginId"/></process>
                    <process field="PASSWORD"><copy to-field="newPassword"/></process>
                    <process field="OLD_PASSWORD">
                        <copy to-field="currentPassword"/>
                    </process>
                    <process field="CONFIRM_PASSWORD">
                        <compare-field operator="equals" field="PASSWORD"><fail-property resource="OSafeUiLabels" property="PasswordMatchError"/></compare-field>
                        <!-- This is checked below in the checkNewPassword method in the bsh block: <not-empty><fail-message message="You must enter your password twice"/></not-empty> -->
                        <copy to-field="newPasswordVerify"/>
                    </process>
                </simple-map-processor>
            </call-map-processor>
           <call-service service-name="updatePassword" in-map-name="passwordContext"></call-service>
        </if-not-empty>
        <if-not-empty field="parameters.PARTY_EMAIL_PREFERENCE">
            <entity-one value-field="partyAttributeExists" entity-name="PartyAttribute">
                <field-map field-name="attrName" value="PARTY_EMAIL_PREFERENCE"/>
                <field-map field-name="partyId" from-field="parameters.partyId"/>
            </entity-one>
            
            <make-value entity-name="PartyAttribute" value-field="partyAttribute"/>
            <set from-field="parameters.partyId" field="partyAttribute.partyId"/>
            <set value="PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrName"/>
            <set from-field="parameters.PARTY_EMAIL_PREFERENCE" field="partyAttribute.attrValue"/>
            <if-not-empty field="partyAttributeExists">
                <store-value value-field="partyAttribute"/>
            <else>
                <create-value value-field="partyAttribute"/>
            </else>
            </if-not-empty>
        </if-not-empty>
        

        <property-to-field field="tempSuccessMessage" resource="OSafeUiLabels" property="UserLoginUpdatedSuccess"/>
        <string-to-list string="${tempSuccessMessage}"  list="success_list"/>
        <field-to-request field="success_list" request-name="osafeSuccessMessageList" />
    </simple-method>
     <simple-method method-name="createUpdatePartyAttributes" short-description="Update Party Attributes" login-required="false" >

            <!-- Create/Update USER Gender -->
            <if-compare-field field="parameters.USER_GENDER" operator="not-equals" to-field="nullValue">
                <set field="createUpdateGenderCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateGenderCtx.attrName" value="GENDER"/>
                <set field="createUpdateGenderCtx.attrValue" from-field="parameters.USER_GENDER"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateGenderCtx"/>
            </if-compare-field>

            <!-- Create/Update USER Title -->
            <if-compare-field field="parameters.USER_TITLE" operator="not-equals" to-field="nullValue">
                <set field="createUpdateTitleCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateTitleCtx.attrName" value="TITLE"/>
                <set field="createUpdateTitleCtx.attrValue" from-field="parameters.USER_TITLE"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateTitleCtx"/>
            </if-compare-field>

            <!-- Create/Update USER DOB (DDMM) -->
            <if-compare-field field="DOB_DDMM" operator="not-equals" to-field="nullValue">
                <set field="createUpdateDOBShortCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateDOBShortCtx.attrName" value="DOB_DDMM"/>
                <set field="createUpdateDOBShortCtx.attrValue" from-field="DOB_DDMM"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBShortCtx"/>
            </if-compare-field>

            <!-- Create/Update USER DOB (DDMMYYYY) -->
            <if-compare-field field="DOB_DDMMYYYY" operator="not-equals" to-field="nullValue">
                <set field="createUpdateDOBLongCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateDOBLongCtx.attrName" value="DOB_DDMMYYYY"/>
                <set field="createUpdateDOBLongCtx.attrValue" from-field="DOB_DDMMYYYY"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBLongCtx"/>
            </if-compare-field>

            <!-- Create/Update USER DOB (MMDD) -->
            <if-compare-field field="DOB_MMDD" operator="not-equals" to-field="nullValue">
                <set field="createUpdateDOBShortCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateDOBShortCtx.attrName" value="DOB_MMDD"/>
                <set field="createUpdateDOBShortCtx.attrValue" from-field="DOB_MMDD"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBShortCtx"/>
            </if-compare-field>

            <!-- Create/Update USER DOB (MMDDYYYY) -->
            <if-compare-field field="DOB_MMDDYYYY" operator="not-equals" to-field="nullValue">
                <set field="createUpdateDOBLongCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateDOBLongCtx.attrName" value="DOB_MMDDYYYY"/>
                <set field="createUpdateDOBLongCtx.attrValue" from-field="DOB_MMDDYYYY"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateDOBLongCtx"/>
            </if-compare-field>

            <!-- Create/Update email preference -->
            <if-compare-field field="parameters.PARTY_EMAIL_PREFERENCE" operator="not-equals" to-field="nullValue">
                <set field="createUpdateEmailPreferenceCtx.partyId" from-field="parameters.partyId"/>
                <set field="createUpdateEmailPreferenceCtx.attrName" value="PARTY_EMAIL_PREFERENCE"/>
                <set field="createUpdateEmailPreferenceCtx.attrValue" from-field="parameters.PARTY_EMAIL_PREFERENCE"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createUpdateEmailPreferenceCtx"/>
            </if-compare-field>

            <!-- Create IS_DOWNLOADED if not exist -->
            <entity-one entity-name="PartyAttribute" value-field="partyAttribute">
                <field-map field-name="partyId" from-field="parameters.partyId"/>
                <field-map field-name="attrName" value="IS_DOWNLOADED"/>
            </entity-one>
            <if-empty field="partyAttribute">
                <set field="createIsDownloadedCtx.partyId" from-field="parameters.partyId"/>
                <set field="createIsDownloadedCtx.attrName" value="IS_DOWNLOADED"/>
                <set field="createIsDownloadedCtx.attrValue" value="N"/>
                <call-service service-name="createUpdatePartyAttribute" in-map-name="createIsDownloadedCtx"/>
            </if-empty>
     </simple-method>
</simple-methods>
