<?xml version="1.0" encoding="UTF-8" ?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">

    <simple-method method-name="validateCreditCard" short-description="Validate Credit Card fields" login-required="false">
        <log level="info" message="${parameters.fieldLevelErrors}"></log>
        <if-compare field="parameters.fieldLevelErrors" operator="equals" value="Y">
            <set field="fieldLevelErrors" value="${parameters.fieldLevelErrors}"/>
            <field-to-request field="fieldLevelErrors" />
        </if-compare>

        <if-compare field="parameters.useSavedCard" operator="equals" value="Y" type="String">
            <if-empty field="parameters.savedVerificationNo">
                <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="VerificationNumberMissingError"/>
                <string-to-list string="${tempErrorMessage}" message-field="savedVerificationNo" list="error_list"/>
            </if-empty>
            <if-empty field="parameters.savedCard">
                <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="SavedCardMissingError"/>
                <string-to-list string="${tempErrorMessage}" message-field="savedCard" list="error_list"/>
                <else>
                    <entity-one value-field="savedCreditCard" entity-name="CreditCard">
                        <field-map field-name="paymentMethodId" from-field="parameters.savedCard"/>
                    </entity-one>
                    <set field="creditCardContext.cardType" from-field="savedCreditCard.cardType"/>
                    <set field="creditCardContext.cardNumber" from-field="savedCreditCard.cardNumber"/>
                    <set field="creditCardContext.expireDate" from-field="savedCreditCard.expireDate"/>
                    <set field="creditCardContext.companyNameOnCard" from-field="savedCreditCard.companyNameOnCard"/>
                    <set field="creditCardContext.titleOnCard" from-field="savedCreditCard.titleOnCard"/>
                    <set field="creditCardContext.firstNameOnCard" from-field="savedCreditCard.firstNameOnCard"/>
                    <set field="creditCardContext.middleNameOnCard" from-field="savedCreditCard.middleNameOnCard"/>
                    <set field="creditCardContext.lastNameOnCard" from-field="savedCreditCard.lastNameOnCard"/>
                    <set field="creditCardContext.suffixOnCard" from-field="savedCreditCard.suffixOnCard"/>
                    <set field="creditCardContext.cardNumber" from-field="savedCreditCard.cardNumber"/>
                </else>
            </if-empty>
        <else>
            <!-- Check credit card fields -->
            <if-empty field="parameters.verificationNo">
                <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="VerificationNumberMissingError"/>
                <string-to-list string="${tempErrorMessage}" message-field="verificationNo" list="error_list"/>
            </if-empty>
             <call-map-processor in-map-name="parameters" out-map-name="creditCardContext">
                  <simple-map-processor name="createCreditCard">
                    <make-in-string field="expireDate">
                      <in-field field="expMonth"/>
                      <constant>/</constant>
                      <in-field field="expYear"/>
                    </make-in-string>
                    <process field="partyId"><copy/></process>
                    <process field="companyNameOnCard"><copy/></process>
                    <process field="titleOnCard"><copy/></process>
                    <process field="firstNameOnCard"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="FirstNameOnCardMissingError"/></not-empty></process>
                    <process field="middleNameOnCard"><copy/></process>
                    <process field="lastNameOnCard"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="LastNameOnCardMissingError"/></not-empty></process>
                    <process field="suffixOnCard"><copy/></process>
                    <process field="cardType"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="CardTypeMissingError"/></not-empty></process>
                    <process field="cardNumber"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="CardNumberMissingError"/></not-empty></process>
                    <process field="contactMechId"><copy/></process>
                    <process field="description"><copy/></process>
                    <process field="expMonth"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="ExpirationMonthMissingError"/></not-empty></process>
                    <process field="expYear"><copy/><not-empty><fail-property resource="OSafeUiLabels" property="ExpirationYearMissingError"/></not-empty></process>
                    <process field="expireDate"><copy/></process>
                  </simple-map-processor>
    
             </call-map-processor>
            <if-validate-method field="creditCardContext.expireDate" method="isDateBeforeToday">
                <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="ExpirationDateIsBeforeTodayError"/>
                <string-to-list string="${tempErrorMessage}" message-field="expMonth" list="error_list"/>
            </if-validate-method>
            <!-- Check that the card type matches -->
            <call-bsh><![CDATA[
                List errorMessageList = javolution.util.FastList.newInstance();
                parameters.put("errorMessageList", errorMessageList );
                if (!org.ofbiz.base.util.UtilValidate.isCardMatch((String) creditCardContext.get("cardType"), (String) creditCardContext.get("cardNumber"))) {
                          errorMessageList.add(
                                              org.ofbiz.base.util.UtilProperties.getMessage("OSafeUiLabels", "CreditCardNumberInvalidError",
                                                  org.ofbiz.base.util.UtilMisc.toMap(
                                                      "cardNumber", (String) creditCardContext.get("cardNumber"),
                                                      "cardType", (String) creditCardContext.get("cardType"),
                                                      "validCardType", org.ofbiz.base.util.UtilValidate.getCardType((String) creditCardContext.get("cardNumber"))
                                                  ),locale));
                  }
            ]]></call-bsh>
    
            <set field="errorMessageList" from-field="parameters.errorMessageList" />
    
            <!-- Get errors from method call and associate to field -->
            <if-not-empty  field="errorMessageList">
                <log level="info" message="isCardMatch found errors"/>
                <iterate list="errorMessageList" entry="error">
                    <string-to-list string="${error}" message-field="cardNumber" list="error_list"/>
                </iterate>
            </if-not-empty>
        </else>
        </if-compare>
        <!-- now that everything is validated & setup, check to see if there are errors, then call the services -->
        <check-errors/>

        <call-service service-name="createCreditCard" in-map-name="creditCardContext">
            <default-message>Credit Card successfully created.</default-message>
            <result-to-request result-name="paymentMethodId"/>
        </call-service>
        <if-compare field="parameters.contactMechId" operator="equals" value="_NEW_">
            <set value="address" field="_response_code_"/>
            <set value="POSTAL_ADDRESS" field="preContactMechTypeId"/>
            <set value="BILLING_LOCATION" field="contactMechPurposeTypeId"/>
            <field-to-request field="DONE_PAGE"/>
            <field-to-request field="preContactMechTypeId"/>
            <field-to-request field="contactMechPurposeTypeId"/>
        </if-compare>
    </simple-method>
</simple-methods>
