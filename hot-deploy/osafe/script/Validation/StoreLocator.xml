<?xml version="1.0" encoding="UTF-8"?>

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xsi:noNamespaceSchemaLocation="http://www.ofbiz.org/dtds/simple-methods.xsd">

    <simple-method method-name="validateAddress" short-description="get latitude and longitude from address" login-required="false">
        <call-class-method class-name="org.ofbiz.product.store.ProductStoreWorker" method-name="getProductStoreId" ret-field="productStoreId">
            <field field="request" type="javax.servlet.ServletRequest"/>
        </call-class-method>
        <set field="address" from-field="parameters.address"/>
        <call-class-method class-name="com.osafe.geo.OsafeGeo"  method-name="fromAddress" ret-field="osafeGeo">
            <field field="address"/>
            <field field="productStoreId"/>
        </call-class-method>
        <call-object-method method-name="latitude" obj-field="osafeGeo" ret-field="latitude"/>
        <call-object-method method-name="longitude" obj-field="osafeGeo" ret-field="longitude"/>
        <if>
            <condition>
                <and>
                    <if-empty field="latitude"/>
                    <if-empty field="longitude"/>
                </and>
            </condition>
            <then>
                <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="GetGeoCodeError"/>
                <string-to-list string="${tempErrorMessage}" list="error_list"/>
            </then>
            <else>
                <!--    search address OsafeGeo Object        -->
                <create-object class-name="com.osafe.geo.OsafeGeo" field="searchOsafeGeo">
                    <field field="latitude" type="String"/>
                    <field field="longitude" type="String"/>
                </create-object>

                <!--    product store param  Map      -->
                <call-class-method class-name="com.osafe.util.Util" method-name="getProductStoreParmMap" ret-field="productStoreParmMap">
                    <field field="request" type="javax.servlet.ServletRequest"/>
                </call-class-method>
                <!--    product store param  GMAP_RADIUS      -->
                <set field="searchRedius" value="20"/>
                <call-class-method class-name="com.osafe.util.Util" method-name="isNumber" ret-field="isNumber">
                    <field field="productStoreParmMap.GMAP_RADIUS" type="String"/>
                </call-class-method>
                <if-compare field="isNumber" operator="equals" value="true">
                    <set field="searchRedius" from-field="productStoreParmMap.GMAP_RADIUS"/>
                </if-compare>
                <!--    product store param  GMAP_UOM      -->
                <set field="uom" value="Miles"/>
                <call-class-method class-name="org.ofbiz.base.util.UtilValidate" method-name="isNotEmpty" ret-field="isParamUomNotEmpty">
                    <field field="productStoreParmMap.GMAP_UOM" type="String"/>
                </call-class-method>
                <if-compare field="isParamUomNotEmpty" operator="equals" value="true">
                    <call-object-method method-name="equalsIgnoreCase" obj-field="productStoreParmMap.GMAP_UOM" ret-field="isParamUomKm">
                        <string value="Kilometers"/>
                    </call-object-method>
                    <call-object-method method-name="equalsIgnoreCase" obj-field="productStoreParmMap.GMAP_UOM" ret-field="isParamUomMi">
                        <string value="Miles"/>
                    </call-object-method>
                </if-compare>
                <if>
                    <condition>
                        <or>
                            <if-compare field="isParamUomKm" operator="equals" value="true"/>
                            <if-compare field="isParamUomMi" operator="equals" value="true"/>
                        </or>
                    </condition>
                    <then>
                        <set field="uom" from-field="productStoreParmMap.GMAP_UOM"/>
                    </then>
                </if>

                <!--    find store near by address        -->
                <set field="isStoreFound" value="false" type="Boolean"/>
                <set field="findStoreCtx.lookupFlag" value="Y"/>
                <set field="findStoreCtx.showAll" value="N"/>
                <set field="findStoreCtx.extInfo" value="N"/>
                <set field="findStoreCtx.statusId" value="PARTY_ENABLED"/>
                <set field="findStoreCtx.partyTypeId" value="PARTY_GROUP"/>
                <set field="findStoreCtx.roleTypeId" value="STORE_LOCATION"/>
                <call-service service-name="findParty" in-map-name="findStoreCtx">
                    <result-to-field result-name="completePartyList" field="storeList"/>
                </call-service>
                <iterate list="storeList" entry="Party" >
                    <call-class-method class-name="org.ofbiz.common.geo.GeoWorker" method-name="findLatestGeoPoint" ret-field="storeGeoPoint">
                        <field field="delegator" type="org.ofbiz.entity.Delegator"/>
                        <string value="PartyGeoPoint"/>
                        <string value="partyId"/>
                        <field field="Party.partyId" type="String"/>
                        <field field="null"/>
                        <field field="null"/>
                    </call-class-method>
                   <call-class-method class-name="org.ofbiz.base.util.UtilValidate" method-name="isNotEmpty" ret-field="isNotEmpty">
                       <field field="storeGeoPoint" type="Object"/>
                  </call-class-method>
                  <if-compare field="isNotEmpty" operator="equals" value="true">
                      <set field="GeoPoint.geoPointId" from-field="storeGeoPoint.geoPointId"/>
                      <call-object-method obj-field="delegator" method-name="findByPrimaryKey" ret-field="geoPoint">
                          <string value="GeoPoint"/>
                          <field field="GeoPoint" type="java.util.Map"/>
                      </call-object-method>
                      <set field="storeLatitude" from-field="geoPoint.latitude" type="String"/>
                      <set field="storeLongitude" from-field="geoPoint.longitude" type="String"/>
                      <create-object class-name="com.osafe.geo.OsafeGeo" field="storeOsafeGeo">
                          <field field="storeLatitude" type="String"/>
                          <field field="storeLongitude" type="String"/>
                      </create-object>
                      <call-class-method class-name="com.osafe.util.Util" method-name="distFrom" ret-field="distance">
                          <field field="searchOsafeGeo" type="com.osafe.geo.OsafeGeo"/>
                          <field field="storeOsafeGeo" type="com.osafe.geo.OsafeGeo"/>
                          <field field="uom" type="String"/>
                      </call-class-method>
                      <if-compare operator="less-equals" field="distance" value="${searchRedius}" type="BigDecimal">
                          <set field="isStoreFound" value="true" type="Boolean"/>
                      </if-compare>
                  </if-compare>
                </iterate>

                <if-compare field="isStoreFound" operator="equals" value="true">
                    <field-to-request field="latitude"/>
                    <field-to-request field="longitude"/>
                    <set field="showMap" value="Y"/>
                    <field-to-request field="showMap"/>
                    <else>
                        <set field="argListNames[]" from-field="searchRedius"/>
                        <set field="argListNames[]" from-field="uom"/>
                        <set field="argListNames[]" from-field="address"/>
                        <property-to-field field="tempErrorMessage" resource="OSafeUiLabels" property="NoStoreFoundError" arg-list-name="argListNames"/>
                        <string-to-list string="${tempErrorMessage}" list="error_list"/>
                    </else>
                </if-compare>
            </else>
        </if>
        <check-errors/>
    </simple-method>
</simple-methods>